# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
   branches:
    - main
    - release/*

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: üî® Build with Maven
      run: mvn package
    - run: mkdir staging && cp target/*.jar staging

    # ËÆæÁΩÆ jobs Maven pom ÁâàÊú¨ÁéØÂ¢ÉÂèòÈáè
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - name: "Build & test"
      run: |
        echo "done!"

    # ‰∏ä‰º†Êñá‰ª∂Âπ∂ÂèëÂ∏É Release
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.RELEASE_VERSION }}"
        prerelease: false
        title: "Release ${{ env.RELEASE_VERSION }}"
        files: |
          staging/*.jar

    # - name: üöÄ SCP to remote server
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ secrets.SSHHOST }}
    #     username: ${{ secrets.SSHUSSER }}
    #     password: ${{ secrets.SSHPASSWORD }}
    #     port: 22
    #     source: "./target/netUtils-1.0.0.jar"
    #     target: "/root"
    #     strip_components: 2

    # - name: üåà run server
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.SSHHOST }}
    #     username: ${{ secrets.SSHUSSER }}
    #     password: ${{ secrets.SSHPASSWORD }}
    #     port: 22
    #     script: |
    #       cd /root
    #       ./start.sh
